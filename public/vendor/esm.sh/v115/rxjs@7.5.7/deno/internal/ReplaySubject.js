/* esm.sh - esbuild bundle(rxjs@7.5.7/internal/ReplaySubject) deno production */
import{Subject as m}from"/v115/rxjs@7.5.7/deno/internal/Subject.js";import{dateTimestampProvider as _}from"/v115/rxjs@7.5.7/deno/internal/scheduler/dateTimestampProvider.js";var h=class extends m{constructor(i=1/0,e=1/0,t=_){super(),this._bufferSize=i,this._windowTime=e,this._timestampProvider=t,this._buffer=[],this._infiniteTimeWindow=!0,this._infiniteTimeWindow=e===1/0,this._bufferSize=Math.max(1,i),this._windowTime=Math.max(1,e)}next(i){let{isStopped:e,_buffer:t,_infiniteTimeWindow:f,_timestampProvider:n,_windowTime:s}=this;e||(t.push(i),!f&&t.push(n.now()+s)),this._trimBuffer(),super.next(i)}_subscribe(i){this._throwIfClosed(),this._trimBuffer();let e=this._innerSubscribe(i),{_infiniteTimeWindow:t,_buffer:f}=this,n=f.slice();for(let s=0;s<n.length&&!i.closed;s+=t?1:2)i.next(n[s]);return this._checkFinalizedStatuses(i),e}_trimBuffer(){let{_bufferSize:i,_timestampProvider:e,_buffer:t,_infiniteTimeWindow:f}=this,n=(f?1:2)*i;if(i<1/0&&n<t.length&&t.splice(0,t.length-n),!f){let s=e.now(),r=0;for(let o=1;o<t.length&&t[o]<=s;o+=2)r=o;r&&t.splice(0,r+1)}}};export{h as ReplaySubject};
//# sourceMappingURL=ReplaySubject.js.map