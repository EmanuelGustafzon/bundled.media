/* esm.sh - esbuild bundle(rxjs@7.5.7/internal/operators/groupBy) deno production */
import{Observable as w}from"/v115/rxjs@7.5.7/deno/internal/Observable.js";import{innerFrom as h}from"/v115/rxjs@7.5.7/deno/internal/observable/innerFrom.js";import{Subject as v}from"/v115/rxjs@7.5.7/deno/internal/Subject.js";import{operate as x}from"/v115/rxjs@7.5.7/deno/internal/util/lift.js";import{createOperatorSubscriber as k,OperatorSubscriber as B}from"/v115/rxjs@7.5.7/deno/internal/operators/OperatorSubscriber.js";function M(y,u,i,b){return x((S,p)=>{let c;!u||typeof u=="function"?c=u:{duration:i,element:c,connector:b}=u;let n=new Map,d=e=>{n.forEach(e),e(p)},l=e=>d(r=>r.error(e)),f=0,m=!1,a=new B(p,e=>{try{let r=y(e),t=n.get(r);if(!t){n.set(r,t=b?b():new v);let s=g(r,t);if(p.next(s),i){let o=k(t,()=>{t.complete(),o?.unsubscribe()},void 0,void 0,()=>n.delete(r));a.add(h(i(s)).subscribe(o))}}t.next(c?c(e):e)}catch(r){l(r)}},()=>d(e=>e.complete()),l,()=>n.clear(),()=>(m=!0,f===0));S.subscribe(a);function g(e,r){let t=new w(s=>{f++;let o=r.subscribe(s);return()=>{o.unsubscribe(),--f===0&&m&&a.unsubscribe()}});return t.key=e,t}})}export{M as groupBy};
//# sourceMappingURL=groupBy.js.map