/* esm.sh - esbuild bundle(rxjs@7.5.7/internal/operators/retry) deno production */
import{operate as S}from"/v115/rxjs@7.5.7/deno/internal/util/lift.js";import{createOperatorSubscriber as b}from"/v115/rxjs@7.5.7/deno/internal/operators/OperatorSubscriber.js";import{identity as d}from"/v115/rxjs@7.5.7/deno/internal/util/identity.js";import{timer as F}from"/v115/rxjs@7.5.7/deno/internal/observable/timer.js";import{innerFrom as x}from"/v115/rxjs@7.5.7/deno/internal/observable/innerFrom.js";function k(r=1/0){let s;r&&typeof r=="object"?s=r:s={count:r};let{count:u=1/0,delay:n,resetOnSuccess:p=!1}=s;return u<=0?d:S((y,t)=>{let o=0,e,f=()=>{let c=!1;e=y.subscribe(b(t,i=>{p&&(o=0),t.next(i)},void 0,i=>{if(o++<u){let l=()=>{e?(e.unsubscribe(),e=null,f()):c=!0};if(n!=null){let a=typeof n=="number"?F(n):x(n(i,o)),m=b(t,()=>{m.unsubscribe(),l()},()=>{t.complete()});a.subscribe(m)}else l()}else t.error(i)})),c&&(e.unsubscribe(),e=null,f())};f()})}export{k as retry};
//# sourceMappingURL=retry.js.map