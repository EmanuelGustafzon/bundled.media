/* esm.sh - esbuild bundle(rxjs@7.5.7/internal/observable/fromEvent) deno production */
import{innerFrom as E}from"/v115/rxjs@7.5.7/deno/internal/observable/innerFrom.js";import{Observable as p}from"/v115/rxjs@7.5.7/deno/internal/Observable.js";import{mergeMap as c}from"/v115/rxjs@7.5.7/deno/internal/operators/mergeMap.js";import{isArrayLike as L}from"/v115/rxjs@7.5.7/deno/internal/util/isArrayLike.js";import{isFunction as i}from"/v115/rxjs@7.5.7/deno/internal/util/isFunction.js";import{mapOneOrManyArgs as y}from"/v115/rxjs@7.5.7/deno/internal/util/mapOneOrManyArgs.js";var h=["addListener","removeListener"],M=["addEventListener","removeEventListener"],l=["on","off"];function s(e,r,n,o){if(i(n)&&(o=n,n=void 0),o)return s(e,r,n).pipe(y(o));let[f,v]=T(e)?M.map(t=>m=>e[t](r,m,n)):w(e)?h.map(u(e,r)):O(e)?l.map(u(e,r)):[];if(!f&&L(e))return c(t=>s(t,r,n))(E(e));if(!f)throw new TypeError("Invalid event target");return new p(t=>{let m=(...d)=>t.next(1<d.length?d:d[0]);return f(m),()=>v(m)})}function u(e,r){return n=>o=>e[n](r,o)}function w(e){return i(e.addListener)&&i(e.removeListener)}function O(e){return i(e.on)&&i(e.off)}function T(e){return i(e.addEventListener)&&i(e.removeEventListener)}export{s as fromEvent};
//# sourceMappingURL=fromEvent.js.map