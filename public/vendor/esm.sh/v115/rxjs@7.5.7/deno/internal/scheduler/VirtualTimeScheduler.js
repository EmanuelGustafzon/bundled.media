/* esm.sh - esbuild bundle(rxjs@7.5.7/internal/scheduler/VirtualTimeScheduler) deno production */
import{AsyncAction as c}from"/v115/rxjs@7.5.7/deno/internal/scheduler/AsyncAction.js";import{Subscription as d}from"/v115/rxjs@7.5.7/deno/internal/Subscription.js";import{AsyncScheduler as h}from"/v115/rxjs@7.5.7/deno/internal/scheduler/AsyncScheduler.js";var n=class extends h{constructor(e=r,t=1/0){super(e,()=>this.frame),this.maxFrames=t,this.frame=0,this.index=-1}flush(){let{actions:e,maxFrames:t}=this,s,i;for(;(i=e[0])&&i.delay<=t&&(e.shift(),this.frame=i.delay,!(s=i.execute(i.state,i.delay))););if(s){for(;i=e.shift();)i.unsubscribe();throw s}}};n.frameTimeFactor=10;var r=class extends c{constructor(e,t,s=e.index+=1){super(e,t),this.scheduler=e,this.work=t,this.index=s,this.active=!0,this.index=e.index=s}schedule(e,t=0){if(Number.isFinite(t)){if(!this.id)return super.schedule(e,t);this.active=!1;let s=new r(this.scheduler,this.work);return this.add(s),s.schedule(e,t)}else return d.EMPTY}requestAsyncId(e,t,s=0){this.delay=e.frame+s;let{actions:i}=e;return i.push(this),i.sort(r.sortActions),1}recycleAsyncId(e,t,s=0){}_execute(e,t){if(this.active===!0)return super._execute(e,t)}static sortActions(e,t){return e.delay===t.delay?e.index===t.index?0:e.index>t.index?1:-1:e.delay>t.delay?1:-1}};export{r as VirtualAction,n as VirtualTimeScheduler};
//# sourceMappingURL=VirtualTimeScheduler.js.map