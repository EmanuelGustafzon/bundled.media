/* esm.sh - esbuild bundle(rxjs@7.5.7/internal/Notification) deno production */
import{EMPTY as v}from"/v115/rxjs@7.5.7/deno/internal/observable/empty.js";import{of as a}from"/v115/rxjs@7.5.7/deno/internal/observable/of.js";import{throwError as d}from"/v115/rxjs@7.5.7/deno/internal/observable/throwError.js";import{isFunction as p}from"/v115/rxjs@7.5.7/deno/internal/util/isFunction.js";var c;(function(e){e.NEXT="N",e.ERROR="E",e.COMPLETE="C"})(c||(c={}));var n=class{constructor(t,o,i){this.kind=t,this.value=o,this.error=i,this.hasValue=t==="N"}observe(t){return E(this,t)}do(t,o,i){let{kind:r,value:l,error:u}=this;return r==="N"?t?.(l):r==="E"?o?.(u):i?.()}accept(t,o,i){var r;return p((r=t)===null||r===void 0?void 0:r.next)?this.observe(t):this.do(t,o,i)}toObservable(){let{kind:t,value:o,error:i}=this,r=t==="N"?a(o):t==="E"?d(()=>i):t==="C"?v:0;if(!r)throw new TypeError(`Unexpected notification kind ${t}`);return r}static createNext(t){return new n("N",t)}static createError(t){return new n("E",void 0,t)}static createComplete(){return n.completeNotification}};n.completeNotification=new n("C");function E(e,t){var o,i,r;let{kind:l,value:u,error:s}=e;if(typeof l!="string")throw new TypeError('Invalid notification, missing "kind"');l==="N"?(o=t.next)===null||o===void 0||o.call(t,u):l==="E"?(i=t.error)===null||i===void 0||i.call(t,s):(r=t.complete)===null||r===void 0||r.call(t)}export{n as Notification,c as NotificationKind,E as observeNotification};
//# sourceMappingURL=Notification.js.map