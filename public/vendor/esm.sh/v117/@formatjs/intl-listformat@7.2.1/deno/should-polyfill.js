/* esm.sh - esbuild bundle(@formatjs/intl-listformat@7.2.1/should-polyfill) deno production */
import * as _1$ from "/v117/@formatjs/intl-localematcher@0.2.32/deno/intl-localematcher.mjs";const __1$ = Object.assign({__esModule:!0},_1$);import * as _2$ from "/v117/@formatjs/intl-listformat@7.2.1/deno/supported-locales.generated.js";const __2$ = _2$.default??_2$;var h=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var _=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var P=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),x=(e,t)=>{for(var r in t)l(e,r,{get:t[r],enumerable:!0})},i=(e,t,r,f)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of y(t))!L.call(e,s)&&s!==r&&l(e,s,{get:()=>t[s],enumerable:!(f=m(t,s))||f.enumerable});return e},u=(e,t,r)=>(i(e,t,"default"),r&&i(r,t,"default")),a=(e,t,r)=>(r=e!=null?h(v(e)):{},i(t||!e||!e.__esModule?l(r,"default",{value:e,enumerable:!0}):r,e));var d=P(n=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.shouldPolyfill=void 0;var g=__1$,O=__2$;function q(e){if(!e)return!0;var t=Array.isArray(e)?e:[e];return Intl.ListFormat.supportedLocalesOf(t).length===t.length}function A(e){if(e===void 0&&(e="en"),!("ListFormat"in Intl)||!q(e))return e?(0,g.match)([e],O.supportedLocales,"en"):void 0}n.shouldPolyfill=A});var o={};x(o,{__esModule:()=>F,default:()=>b,shouldPolyfill:()=>I});var c=a(d());u(o,a(d()));var F=!0,{shouldPolyfill:I}=c,{default:p,...M}=c,b=p!==void 0?p:M;export{F as __esModule,b as default,I as shouldPolyfill};
//# sourceMappingURL=should-polyfill.js.map